/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package learning.scafi.integration

import acprograms.MyIncarnation.*
import acprograms.BasicUsageProgram
import acprograms.JavaFactory
import scala.Tuple2
import scala.collection.immutable.Map


class App {
    val greeting: String
        get() {
            return "Hello world."
        }
}

fun main(args: Array<String>) {
    println(App().greeting)

    val program = BasicUsageProgram()
    val f = JavaFactory()

    /*
    import scala.collection.`Map$`.`MODULE$` as M
    // Simulate first round for device 0, with empty context
    //val c1 = factory().context(0, M.empty(), M.empty(), M.empty())
    val c1 = f.context(0, hashMapOf(), hashMapOf(), hashMapOf())
    val e1 = program.round(c1, null)

    //val m: Map<Any,Any> = M.empty()

    // Simulate second round for device 0, with context given only by its previous export
    val c2 = factory().context(0, m.`$plus`(Tuple2.apply(0,e1)))
    val e2 = program.round(c2, null)

    // Print contexts and exports in output
    println("c1=$c1\ne1=$e1\n\nc2=$c2\ne2=$e2")*/
}
